name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - 'README.md'
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build Python source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          name: source
          path: dist/*.tar.gz

  build_wheels:
    needs: build_sdist
    name: Build wheel on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Download source distribution
        uses: actions/download-artifact@v2
        with:
          name: source
      - name: Get package name
        run: python -c "import os, glob; open(os.environ['GITHUB_ENV'], 'w').write('PKG=' + glob.glob('nv2a_debug-*.tar.gz')[0][0:-7] + '\n')"
      - name: Unpack source distribution
        run: tar -xf ${{ env.PKG }}.tar.gz
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.7.0

      - name: Build wheels for PyPy
        run: |
          python -m cibuildwheel --output-dir wheelhouse ${{ env.PKG }}
        env:
          LD_LIBRARY_PATH: .
          CIBW_BUILD: "pp38-*"
          CIBW_BEFORE_BUILD_LINUX: pip install cmake
          CIBW_BUILD_VERBOSITY: 1
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, build_sdist]
    name: Upload Python distribution to PyPI
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: source
          path: dist
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'release' && github.event.release.prerelease
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'release' && !github.event.release.prerelease
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
