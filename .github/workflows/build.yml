name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - 'README.md'
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  select-python-version-for-publishing:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.select-version.outputs.version }}
    steps:
      - id: select-version
        run: echo "version=3.9" >> $GITHUB_OUTPUT


  build:
    needs: [ select-python-version-for-publishing ]
    name: Build Python sdist and wheel for ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc

      - name: Hatch fmt and type check
        run: |
          hatch fmt --check
          hatch run types:check

      - name: Build sdist and wheel
        run: |
          hatch build

      - name: Test
        run: |
          hatch test

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.python-version }} == ${{ needs.select-python-version-for-publishing.outputs.python-version }}
        with:
          name: source-${{ matrix.platform }}-${{ matrix.python-version }}
          path: dist/*.tar.gz

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.python-version }} == ${{ needs.select-python-version-for-publishing.outputs.python-version }}
        with:
          name: wheel-${{ matrix.platform }}-${{ matrix.python-version }}
          path: dist/*.whl


  upload_pypi:
    needs: [ build ]
    name: Upload Python distribution to PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: source
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.release.prerelease
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.release.prerelease == false
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

